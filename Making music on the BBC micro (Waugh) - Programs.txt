# Making music ont eh BBC micro

##Chapter 1

10 REM PROGRAM 1.120 REM Sine Wave Plotter
3040 MODE 450 REM Define Windows60 VDU28,0,4,39,070 VDU24,0,0;1279;850; 
8090 REPEAT100 INPUT"Frequency (1-10)",Freq
110 INPUT"Amplitute (50-400)",Amp 
120 PROCSine
130 PRINT"Press SPACE to enter another wave"'"'C' to clear screen, 'F' to finish"140 REPEAT150 Key=GET160 UNTIL Key=32 OR Key=67 OR Key=70
170 IF Key=67 THEN CLG180 UNTIL Key=70190 MODE7200 END210220 DEF PROCSine230 VDU29,0;450;240 MOVE0,0250 FOR Time=0 TO 1279 STEP 10260 DRAWTime,Amp*SIN(RAD(Freq*Time))
270 NEXT Time280 ENDPROC


5 REM With harmonic
10 REM PROGRAM 1.120 REM Sine Wave Plotter
3040 MODE 450 REM Define Windows60 VDU28,0,4,39,070 VDU24,0,0;1279;850; 
8090 REPEAT100 INPUT"Frequency (1-10)",Freq
110 INPUT"Amplitute (50-400)",Amp 
120 PROCSine
130 PRINT"Press SPACE to enter another wave"'"'C' to clear screen, 'F' to finish"140 REPEAT150 Key=GET160 UNTIL Key=32 OR Key=67 OR Key=70
170 IF Key=67 THEN CLG180 UNTIL Key=70190 MODE7200 END210220 DEF PROCSine230 VDU29,0;450;240 MOVE0,0250 FOR Time=0 TO 1279 STEP 10260 DRAWTime,Amp *SIN(RAD(Freq*Time))+Amp*SIN (RAD(Freq *2*Time))
270 NEXT Time280 ENDPROC

### The sound of the BBC micro

10 FOR Pitch=1 TO 253 STEP 4
20 SOUND1,-15,Pitch,1030 NEXT Pitch

### Pitch
10 FOR Pitch=53 TO 149
20 SOUND1,-15,Pitch,1
30 NEXT Pitch

10 FOR Pitch=53 TO 149 STEP 4
20 SOUND1,-15,Pitch,130 NEXT Pitch

10 FOR Pitch=101 TO 149
20 SOUND1, -15,Pitch,10
30 NEXT Pitch

10 FOR Pitch=1 TO 255
20 SOUND1, -15,Pitch,10
30 NEXT Pitch

### Volume
40 FOR Volume =-15 TO -1
50 SOUND1, Volume,53,1
60 NEXT Volume

10 FOR Volume=1 TO -15 STEP -1
20 SOUND1,Volume,53,130 NEXT Volume

10 ENVELOPE1,1,0,0,0,0,0,0,127,-1,-1,-1,126,1
20 FOR Pitch=53 TO 10130 SOUND1,1,Pitch,1040 NEXT Pitch

10 ENVELOPE1,1,0,0,0,0,0,0,127,-1,-1,-1,126,1
20 FOR Pitch=149 TO 245 STEP 530 SOUND1,1,Pitch,1040 NEXT Pitch

10 ENVELOPE1,1,0,0,0,0,0,0,3,-100,0,0,126,0
20 FOR Pitch=53 TO 10130 SOUND1,1,Pitch,1040 NEXT Pitch

### Duration
n/a
### Motility

10 REM PROGRAM 1.220 REM Motility Tester3040 ON ERROR GOTO 2905060 ENVELOPE1,11,16,4,8,2,1,1,100,0,0,-100,100,10070 REM Turn off Auto Repeat 80 *FX11,090100 REPEAT110 Score=0120 CLS130 PRINTTAB(4,6)"Tap the RETURN key repeatedly"'" d with"'"as quickly as possible an the minimum of movement."140 Begin=GET150 TIME=0160170 REPEAT180 Tap=INKEY(0):IF Tap=13 Score=Score+1190 UNTIL TIME>=500200210 PRINTTAB(16,10)"STOP"220 SOUND1,1,100,20230 PRINTTAB(6,12)"Your MOTILITY rating is"'Score/5;" taps per second"240 PRINTTAB(8,15)"Another try (Y/N)?"
250 REPEAT:Key=GET AND &DF:UNTIL Key=89 OR Key=78260 UNTIL Key=78270280 REM Turn On Auto Repeat 290 *FX12,0300 END

### Timbre

#### Sawtooth wave

10 REM PROGRAM 1.120 REM Sine Wave Plotter
3040 MODE 450 REM Define Windows60 VDU28,0,4,39,070 VDU24,0,0;1279;850; 
8090 REPEAT100 INPUT"Frequency (1-10)",Freq
110 INPUT"Amplitute (50-400)",Amp 
120 PROCSine
130 PRINT"Press SPACE to enter another wave"'"'C' to clear screen, 'F' to finish"140 REPEAT150 Key=GET160 UNTIL Key=32 OR Key=67 OR Key=70
170 IF Key=67 THEN CLG180 UNTIL Key=70190 MODE7200 END210220 DEF PROCSine230 VDU29,0;450;240 MOVE0,0250 FOR Time=0 TO 1279 STEP 10260 DRAWTime,Amp*SIN(RAD(Freq*Time))+Amp*1/2*SIN (RAD(Freq*2*Time))+Amp*1/3*SIN(RAD(Freq*3*Time))+ Amp*1/4*SIN(RAD(Freq*4*Time))+Amp*1/5*SIN (RAD(Freq*5*Time))
270 NEXT Time280 ENDPROC

### Square wave

10 REM PROGRAM 1.120 REM Sine Wave Plotter
3040 MODE 450 REM Define Windows60 VDU28,0,4,39,070 VDU24,0,0;1279;850; 
8090 REPEAT100 INPUT"Frequency (1-10)",Freq
110 INPUT"Amplitute (50-400)",Amp 
120 PROCSine
130 PRINT"Press SPACE to enter another wave"'"'C' to clear screen, 'F' to finish"140 REPEAT150 Key=GET160 UNTIL Key=32 OR Key=67 OR Key=70
170 IF Key=67 THEN CLG180 UNTIL Key=70190 MODE7200 END210220 DEF PROCSine230 VDU29,0;450;240 MOVE0,0250 FOR Time=0 TO 1279 STEP 10260 DRAWTime,Amp*SIN(RAD(Freq*Time))+Amp*1/3*SIN (RAD(Freq*3*Time))+Amp*1/5*SIN(RAD(Freq*5*Time))+ Amp*1/7*SIN(RAD(Freq*7*Time))
270 NEXT Time280 ENDPROC

## Chapter 2

10 FOR Scale=1 TO 820 READ Pitch30 SOUND1 ,-15,Pitch,10
40 NEXT Scale50 END60 DATA 53,61,69,73,81,89,97 ,101

10 FOR Pitch=5 TO 245 STEP 48
20 SOUND1,-15,Pitch,1030 NEXT Pitch

10 Note=5320 FOR Pitch=1 TO 830 READ Interval40 Note=Note+Interval
50 SOUND1,- 15,Note,10
60 NEXT Pitch70 END80 DATA 0,8,8,4,8,8,8,4

10 REM PROGRAM 2.120 REM Chord Sound Demonstration3040 CLS50 PRINT'''6070 FOR Chord=1 TO 480 READ Chord$,Notes$,Pitch1,Pitch2 
90 PRINT"C ";Chord$;"=C + "Notes$'100 SOUND&201,-12,53,60110 SOUND&202,-12,Pitch1,60120 SOUND&203,-12,Pitch2,60130 PROCDelay(300)140 NEXT Chord150160 REM Chords with 4 Notes170 FOR Arp=1 TO 5180 READ Chord$,Notes$190 PRINT"C ";Chord$;" (Arpeggio)=C +"Notes$'
200 FOR Note=1 TO 17
210 READ Pitch220 SOUND1,-15,Pitch,3
230 NEXT Note240 PROCDelay(200)
250 NEXT Arp260 END270280 DEF PROCDelay(Time)290 TIME=0:REPEAT UNTIL TIME>Time300 ENDPROC310320 DATA Major,E + G,69,81330 DATA Minor,Eb + G,65,81340 DATA Augmented,E + G#,69,85350 DATA Suspended 4th,F + G,73,81360 DATA Diminished,Eb + Gb + A,53,65,77,89,101,113,125,137,149,137,125,113,10 1,89,77,65,53370 DATA 7th,E + G + Bb,53,69,81,93,10 1,117,129,141,149,141,129,117,101,93,81, 69,53380 DATA Major 7th,E + G + B,53,69,81, 97,101,117,129,145,149,145,129,117,101,9 7,81,69,53390 DATA Major Sixth,E + G + A,53,69,8 1,89,101,117,129,137,149,137,129,117,101 ,89,81,69,53400 DATA Minor Sixth,Eb + G + A,53,65, 81,89,101,113,129,137,149,137,129,113,10 1,89,81,65,53

## Chapter 3 

10 REM Hawaiian Guitar
20 ENVELOPE1,132,0,0,0,0,0,0,126,-10,0,-4,126,100 
30 ENVELOPE2,132,-8,0,1,1,0,8,126,-10,0,-4,126,100 
40 FOR Note=1 TO 8
50 READ Env,Pitch,Dur
60 SOUND 1,Env,Pitch,Dur
70 NEXT Note
80 END
90 DATA1,53 ,5,1,41,10,1,53,10,2,73,15
100 DATA1,41,5,1,33,10, 1,53,10,2,69,20



10 REM PROGRAM 3.120 REM Basic Program to Convert30 REM Note Names & Octave Numbers 40 REM Into PITCH values5060 PROCSetup70 FOR Count=1 TO 1680 PROCChooseNote90 PROCPlayNote100 NEXT Count
110 END120130 DEF PROCSetup
140 Scale$="  C  C# D  D# E  F  F# G  G# A  A# B" 
150160 REM Key Sets Value170 REM Key=1 Will Play as You Would220 Key=1230240 DIM NotesToChooseFrom$(15)250 FOR S%=1 TO 15260 READ Note$270 NotesToChooseFrom$(S%)=Note$280 NEXT S%290 ENDPROC300310 DATAG1,A0,B0,C2,D2,E2,F#2,G2,A2,B2,C3,D3,E3,F#3,G3
320330 DEF PROCChooseNote340 Note=RND(15)350 Note$=NotesToChooseFrom$(Note)360 ENDPROC370380 DEF PROCPlayNote390 PROCAnalyseNote400 PROCCalculatePitch410 PRINT Note$,Pitch,Octave420 SOUND1,-15,Pitch,5:SOUND1,0,0,0
430 ENDPROC440450 DEF PROCAnalyseNote460 IF LEN(Note$)<2 OR LEN(Note$)>3 THEN PRINT"ERROR IN DATA ";Note$:STOP470 IF LEN(Note$)=2 THEN NoteName$=LEFT$(Note$,1) ELSE NoteName$=LEFT$(Note$,2)480 PositionInScale=INSTR(Scale$,NoteName$)/3490 Octave=VAL(RIGHT$(Note$,1))500 ENDPROC510520 DEF PROCCalculatePitch530 Pitch=Key+PositionInScale*4+(Octave-1)*48540 IF Pitch<0 OR Pitch>255 THEN PRINT"ERROR IN DATA ";Note$:STOP
550 ENDPROC


10 FOR Pitch=13 TO 1 STEP -4
20 SOUND1,-15,Pitch,830 NEXT Pitch40 SOUND1,-15,0,8


## Chapter 4

### Hold

10 REM PROGRAM 4.120 REM HOLD PARAMETER DEMONSTRATION 
3040 ENVELOPE1,4,0,0,0,0,0,0,126,-1,0,-1,126,6050 TIME=06070 SOUND1,1,53,40 
80 PROCTime90 SOUND1,1,69,20100 PROCTime110 END120130 DEF PROCTime 
140 REPEAT150 IF TIME/100=INT(TIME/100) PRINT TIME/100160 UNTIL TIME>800 
170 STOP180 ENDPROC

10 REM PROGRAM 4.1a - extra hold, one less call to PROCTime20 REM HOLD PARAMETER DEMONSTRATION 
3040 ENVELOPE1,4,0,0,0,0,0,0,126,-1,0,-1,126,6050 TIME=06070 SOUND1,1,53,40 
80 REM No time, no pause/hold
90 SOUND1,1,69,20100 PROCTime110 END120130 DEF PROCTime 
140 REPEAT150 IF TIME/100=INT(TIME/100) PRINT TIME/100160 UNTIL TIME>800 
170 STOP180 ENDPROC

10 REM PROGRAM 4.1a - extra sound, one less call to PROCTime20 REM HOLD PARAMETER DEMONSTRATION 
3040 ENVELOPE1,4,0,0,0,0,0,0,126,-1,0,-1,126,6050 TIME=06070 SOUND1,1,53,40 
80 SOUND&1001,0,0,40
90 SOUND1,1,69,20100 PROCTime110 END120130 DEF PROCTime 
140 REPEAT150 IF TIME/100=INT(TIME/100) PRINT TIME/100160 UNTIL TIME>800 
170 STOP180 ENDPROC


### Sychronisation

10 SOUND1,-15,73,30
20 SOUND2,-15,89,30
30 SOUND3,-15,101,3010 SOUND&201,-15,73,30
20 SOUND&202,-15,89,30
30 SOUND&203,-15,101,30

10 SOUND1,-15,73,30
15 FOR Delay=1 TO 400:NEXT Delay
20 SOUND2,-15,89,30
30 SOUND3,-15,101,3010 SOUND&201,-15,73,30
15 FOR Delay=1 TO 400:NEXT Delay
20 SOUND&202,-15,89,30
30 SOUND&203,-15,101,30

### Flush


10 REM PROGRAM 4.220 REM CHANNEL FLUSHING DEMONSTRATION
30 SOUND3,-10,5,24540 SOUND1,-15,53,60:SOUND2,-12,5,60
50 SOUND1,-15,81,60:SOUND2,-12,53,60
60 SOUND1,-15,101,60:SOUND2,-12,53,60
70 SOUND1,-15,117,5:SOUND2,-12,69,5
80 SOUND1,-15,113,60:SOUND2,-12,65,60
90 PRINT"PRESS ANY KEY TO STOP"100 IF INKEY(400)<>-1 THEN SOUND&11,0,0,0:SOUND&12,0,0,0:SOUND&13,0,0,0 ELSE PRINT"TOO LATE"110 SOUND1,-15,149,2:SOUND1,-15,137,2
120 SOUND1,-15,129,2:SOUND1,-15,137,2
130 SOUND1,-15,145,2:SOUND1,-15,137,2
140 SOUND1,-15,145,2:SOUND1,-15,149,4


### Amplitude

n/a

### Pitch

5 REM Noise pitch 3
10 SOUND 0,-15,3,200
20 FOR Pitch=0 TO 200
30 SOUND1,0,Pitch,1
40 NEXT Pitch

5 REM Noise pitch 7
10 SOUND 0,-15,7,200
20 FOR Pitch=0 TO 200
30 SOUND1,0,Pitch,1
40 NEXT Pitch

### Duration

10 SOUND1,-15,53,20
20 SOUND1,-15,54,20

5 REM with 2/100 s gap between notes
10 SOUND1,-15,53,20
15 SOUND1,0,0,0
20 SOUND1,-15,54,20

10 TIME=020 FOR X%=0 TO 500
30 NEXT40 PRINT TIME/100

5 REM with 2/100 s gap between notes
10 TIME=020 FOR X%=0 TO 500
25 SOUND1,0,0,0
30 NEXT40 PRINT TIME/100



## Chapter 5

### ADSR and the ENVELOPE command


10 REM PROGRAM 5.120 REM ADSR Graph Generator3040 *TV255,150 MODE160 PROCSetUp70 PROCAxis80 Input$="":PROCReset:PROCPrintEnv
90100 REPEAT110 *FX15,1120 Input$=GET$130 IF Input$=" " PROCSound140 IF Input$>="1" AND Input$<="8" PROCEnv150 IF Input$="C" PROCAxis160 UNTIL Input$="Q"170 END180190 DEF PROCSetUp200 REM Set Text Window210 VDU28,0,4,39,0220 REM Set Graphics Window230 VDU24,0;0;1279;860;240 REM Background=Yellow250 GCOL0,130:CLG260 REM Foreground=Black270 GCOL0,0280 REM Set COLOUR 1 to Flashing 
290 VDU19,1,9,0,0,0300310 REM Set Initial Parameters
320 PI1=0:PI2=0:PI3=0330 PN1=0:PN2=0:PN3=0340 T=20:T1=T:Pitch=10:Pit1=Pitch350 AA=126:AD=-4:AS=-1:AR=-6360 ALA=126:ALD=80:Duration=80370 REM Marker for X Axis380 VDU23,224,128,128,128,128,128,128,128,128390 ENDPROC400410 DEF PROCAxis420 YScale=6430 CLG440 VDU29,0;0;450 MOVE50,0:DRAW50,860460 MOVE0,50:DRAW1279,50470 VDU5480 FOR Mark%=0 TO 780 STEP YScale*10
490 MOVE20,Mark%+YScale*10:PRINT"-" 
500 NEXT Mark%510 FOR Mark%=50 TO 1250 STEP 100520 MOVEMark%,50:PRINTCHR$224530 NEXT Mark%540 VDU 4550 REM Set Graphics Origin560 VDU29,50;50;570 ENDPROC580590 DEF PROCEnv600 PROCReset610 IF Input$="1" t=1620 IF Input$="2" aa=1630 IF Input$="3" ad=1640 IF Input$="4" as=1650 IF Input$="5" ar=1660 IF Input$="6" ala=1670 IF Input$="7" ald=1680 IF Input$="8" dur=1690 PROCPrintEnv700 PROCAlter710 PROCPrintEnv
720 ENDPROC730740 DEF PROCReset750 b=3:t=3:aa=3:ad=3:as=3:ar=3760 ala=3:ald=3:dur=3770 ENDPROC780790 DEF PROCPrintEnv800 COLOURb:PRINTTAB(0,0)"ENV1,";:COLOURt:PRINT;T;810 COLOURb:PRINT;",";PI1;",";PI2;",";PI3;",";PN1;",";PN2;",";PN3;",";820 COLOURaa:PRINT;AA;:COLOURb:PRINT;",";:COLOURad:PRINT;AD;:COLOURb:PRINT;",";830 COLOURas:PRINT;AS;:COLOURb:PRINT;",";:COLOURar:PRINT;AR;:COLOURb:PRINT","; 
840 COLOURala:PRINT;ALA;:COLOURb:PRINT;",";:COLOURald:PRINT;ALD:COLOURb850 COLOURdur:PRINTTAB(14,1)SPC(4)TAB(10,1)"Dur=";Duration:COLOURb
860 ENDPROC870880 DEF PROCAlter890 INPUT NewVal$:PRINTTAB(0,2)SPC(6)900 IF NewVal$="" PROCReset:PROCPrintEnv:ENDPROC910 NewVal=EVAL(NewVal$)920 PRINTTAB(30,0)SPC(20)930 ON EVAL(Input$) GOTO940,950,960,970,980,990,1000,1010940 T=NewVal:T1=T:ENDPROC
950 AA=NewVal:ENDPROC960 AD=NewVal:ENDPROC970 AS=NewVal:ENDPROC980 AR=NewVal:ENDPROC990 ALA=NewVal:ENDPROC1000 ALD=NewVal:ENDPROC1010 Duration=NewVal:ENDPROC
10201030 DEF PROCSound
1040 ENVELOPE1,T,PI1,PI2,PI3,PN1,PN2,PN3,AA,AD,AS,AR,ALA,ALD1050 SOUND1,1,Pit1,Duration1060 REM Clear Last Timing Results1070 PRINTTAB(0,4)SPC(39);:PRINTTAB(0,4);1080 IF T=0 T1=11090 IF T=128MT1=1291100 Time=0:Amp=01110 MOVE0,01120 YScale=61130 PROCAttack1140 PROCPrint("A",8,32)1150 IF OverTime GOTO 12101160 PROCDecay1170 PROCPrint("D",8,32)1180 IF OverTime GOTO 12101190 PROCSustain1200 PROCPrint("S",8,32)1210 PROCPrint("r",40,16)1220 PROCRelease1230 PROCPrint("R",0,0)1240 PRINT;"Secs";1250 ENDPROC12601270 DEF PROCAttack1280 REPEAT1290 Amp=Amp+AA1300 IF Amp>ALA Amp=ALA1310 DRAW Time,Amp*YScale1320 Time=Time+T1 MOD1281330 PROCTimeCheck:IF OverTime GOTO1350
1340 DRAW Time,Amp*YScale1350 UNTIL OverTime OR Amp=ALA1360 ENDPROC13701380 DEF PROCDecay1390 REPEAT1400 Amp=Amp+AD1410 IF ALD<ALA:IF Amp<ALD Amp=ALD1420 IF ALD>ALA:IF Amp>ALD Amp=ALD
1430 IF ALD=ALA Amp=ALD1440 DRAW Time,Amp*YScale1450 Time=Time+T1 MOD1281460 PROCTimeCheck:IF OverTime GOTO1480
1470 DRAW Time,Amp*YScale1480 UNTIL OverTime OR Amp=ALD
1490 ENDPROC15001510 DEF PROCSustain1520 REPEAT1530 Amp=Amp+AS1540 IF Amp<0 Amp=01550 DRAW Time,Amp*YScale1560 Time=Time+T1 MOD1281570 PROCTimeCheck:IF OverTime GOTO1590
1580 DRAW Time,Amp*YScale1590 UNTIL OverTime OR Amp=01600 ENDPROC16101620 DEF PROCRelease1630 REPEAT1640 Amp=Amp+AR1650 IF Amp<0 Amp=01660 DRAW Time,Amp*YScale1670 IF Amp=0 GOTO17001680 Time=Time+T1 MOD1281690 DRAW Time,Amp*YScale1700 UNTIL Amp=01710 ENDPROC17201730 DEF PROCTimeCheck1740 OverTime=FALSE1750 IF Time>Duration*5 Time=Duration*5:OverTime=TRUE1760 ENDPROC17701780 DEF PROCPrint(Phase$,Oset1,Oset2) 
1790 IF Phase$="R" GOTO18601800 VDU51810 MOVE Time+Oset1,Amp*YScale+Oset2 
1820 PRINTPhase$
1830 MOVE Time,Amp*YScale1840 VDU41850 IF Phase$="r" ENDPROC1860 PRINTPhase$;"=";Time/100;" ";
1870 ENDPROC

### How to use the program

10 REM PROGRAM 5.1A20 REM Function Key SetUp for
30 REM ADSR Graph Generator
4050 REM CLEAR60 *KEY0 C70 REM T80 *KEY1 190 REM AA100 *KEY2 2
110 REM AD
120 *KEY3 3
130 REM AS
140 *KEY4 4
150 REM AR
160 *KEY5 5170 REM ALA180 *KEY6 6190 REM ALD200 *KEY7 7210 REM Duration 
220 *KEY8 8230 REM SOUND 
240 *KEY9 " "

#### Renumbered

65 PROCFnkeys
3000 DEF PROCFnkeys 
3010 REM ADDITIONAL PROC TO PROG 5.1
3020 REM BEEN RENUMBERED
3040 REM PROGRAM 5.1A3050 REM Function Key SetUp for
3060 REM ADSR Graph Generator
30703080 REM CLEAR3090 *KEY0 C3100 REM T3110 *KEY1 13120 REM AA3130 *KEY2 2
3140 REM AD
3150 *KEY3 3
3160 REM AS
3170 *KEY4 4
3180 REM AR
3190 *KEY5 53200 REM ALA3210 *KEY6 63220 REM ALD3230 *KEY7 73240 REM Duration 
3250 *KEY8 83260 REM SOUND 
3270 *KEY9 " "
3280 ENDPROC

### The Pitch Graph Generator program

9 REM PROGRAM 5.2 (Combined)10 REM PROGRAM 5.119 REM ADSR & PITCH Graph Generator20 REM ADSR Graph Generator24 REM Added Line Numbers are not25 REM Multiples of 10 and are+26 REM 75,145,762,764,855,1242,124427 REM Plus 2000 to 267029 REM Altered Lines=150,810 3575 PROCAxis2145 IF Input$>="!" AND Input$<="'" Inp ut=ASC(Input$):PROCPitEnv762 pi1=3:pi2=3:pi3=3764 pn1=3:pn2=3:pn3=3:p=3
810 COLOURb:PRINT;",";:COLOURpi1:PRINT;PI1;:COLOURb:PRINT;",";:COLOURpi2:PRINT;PI2;:COLOURb:PRINT;",";:COLOURpi3:PRINT;PI3;:COLOURb:PRINT;",";:COLOURpn1:PRINT;PN1;:COLOURb:PRINT;",";:COLOURpn2:PRINT;PN2;:COLOURb:PRINT;",";:COLOURpn3:PRINT;PN3;:COLOURb:PRINT;",";855 COLOURp:PRINTTAB(23,1)SPC(6)TAB(18 ,1)"Pitch=";Pit1:COLOURb1242 FinalTime=Time
1244 PROCPitchEnv
2000 DEF PROCAxis2
2010 YScale=32020 VDU29,0;0;2030 VDU52040 FOR Mark%=60 TO 780 STEP YScale*10
2050 MOVE40,Mark%+YScale*10:PRINT"-"
2060 NEXT Mark%2070 VDU42080 VDU29,50;50;2090 ENDPROC21002110 DEF PROCP(pi,pn)2120 FOR P%=1 TO pn2130 Pitch=Pitch+pi2140 IF Pitch>255 Pitch=Pitch MOD256
2150 IF Pitch<0 Pitch=Pitch+2562160 DRAW Time,Pitch*YScale2170 Time=Time+T1 MOD1282180 PROCFinalTimeCheck:IF FTime P%=pn
2190 DRAW Time,Pitch*YScale2200 NEXT P%2210 ENDPROC22202230 DEF PROCPitEnv2240 PROCReset2250 IF Input=33 pi1=12260 IF Input=34 pi2=12270 IF Input=35 pi3=12280 IF Input=36 pn1=12290 IF Input=37 pn2=1
2300 IF Input=38 pn3=1
2310 IF Input=39 pn3=1
2320 PROCPrintEnv2330 PROCAlterPit2340 PROCPrintEnv
2350 ENDPROC

#### Adjusting line 810 for "P."

810 COLOURb:P.;",";:COLOURpi1:P.;PI1;:COLOURb:P.;",";:COLOURpi2:P.;PI2;:COLOURb:P.;",";:COLOURpi3:P.;PI3;:COLOURb:P.;",";:COLOURpn1:P.;PN1;:COLOURb:P.;",";:COLOURpn2:P.;PN2;:COLOURb:P.;",";:COLOURpn3:P.;PN3;:COLOURb:P.;",";


#### Corrected 5.2 with P.

9 REM PROGRAM 5.2 (Combined)10 REM PROGRAM 5.119 REM ADSR & PITCH Graph Generator20 REM ADSR Graph Generator24 REM Added Line Numbers are not25 REM Multiples of 10 and are+26 REM 75,145,762,764,855,1242,124427 REM Plus 2000 to 267029 REM Altered Lines=150,810 3575 PROCAxis2145 IF Input$>="!" AND Input$<="'" Input=ASC(Input$):PROCPitEnv762 pi1=3:pi2=3:pi3=3764 pn1=3:pn2=3:pn3=3:p=3
810 COLOURb:P.;",";:COLOURpi1:P.;PI1;:COLOURb:P.;",";:COLOURpi2:P.;PI2;:COLOURb:P.;",";:COLOURpi3:P.;PI3;:COLOURb:P.;",";:COLOURpn1:P.;PN1;:COLOURb:P.;",";:COLOURpn2:P.;PN2;:COLOURb:P.;",";:COLOURpn3:P.;PN3;:COLOURb:P.;",";
855 COLOURp:PRINTTAB(23,1)SPC(6)TAB(18 ,1)"Pitch=";Pit1:COLOURb
1242 FinalTime=Time
1244 PROCPitEnv
2000 DEF PROCAxis2
2010 YScale=32020 VDU29,0;0;2030 VDU52040 FOR Mark%=60 TO 780 STEP YScale*10
2050 MOVE40,Mark%+YScale*10:PRINT"-"
2060 NEXT Mark%2070 VDU42080 VDU29,50;50;2090 ENDPROC21002110 DEF PROCP(pi,pn)2120 FOR P%=1 TO pn2130 Pitch=Pitch+pi2140 IF Pitch>255 Pitch=Pitch MOD256
2150 IF Pitch<0 Pitch=Pitch+2562160 DRAW Time,Pitch*YScale2170 Time=Time+T1 MOD1282180 PROCFinalTimeCheck:IF FTime P%=pn
2190 DRAW Time,Pitch*YScale2200 NEXT P%2210 ENDPROC22202230 DEF PROCPitEnv2240 PROCReset2250 IF Input=33 pi1=12260 IF Input=34 pi2=12270 IF Input=35 pi3=12280 IF Input=36 pn1=12290 IF Input=37 pn2=1
2300 IF Input=38 pn3=1
2310 IF Input=39 pn3=1
2320 PROCPrintEnv2330 PROCAlterPit2340 PROCPrintEnv
2350 ENDPROC

#### Combining 5.1 and 5.2



9 REM PROGRAM 5.2 (Combined)10 REM PROGRAM 5.119 REM ADSR & PITCH Graph Generator20 REM ADSR Graph Generator24 REM Added Line Numbers are not25 REM Multiples of 10 and are+26 REM 75,145,762,764,855,1242,124427 REM Plus 2000 to 267029 REM Altered Lines=150,810 3530
3540 *TV255,150 MODE160 PROCSetUp70 PROCAxis
75 PROCAxis280 Input$="":PROCReset:PROCPrintEnv
90100 REPEAT110 *FX15,1120 Input$=GET$130 IF Input$=" " PROCSound140 IF Input$>="1" AND Input$<="8" PROCEnv
145 IF Input$>="!" AND Input$<="'" Input=ASC(Input$):PROCPitEnv150 IF Input$="C" PROCAxis160 UNTIL Input$="Q"170 END180190 DEF PROCSetUp200 REM Set Text Window210 VDU28,0,4,39,0220 REM Set Graphics Window230 VDU24,0;0;1279;860;240 REM Background=Yellow250 GCOL0,130:CLG260 REM Foreground=Black270 GCOL0,0280 REM Set COLOUR 1 to Flashing 
290 VDU19,1,9,0,0,0300310 REM Set Initial Parameters
320 PI1=0:PI2=0:PI3=0330 PN1=0:PN2=0:PN3=0340 T=20:T1=T:Pitch=10:Pit1=Pitch350 AA=126:AD=-4:AS=-1:AR=-6360 ALA=126:ALD=80:Duration=80370 REM Marker for X Axis380 VDU23,224,128,128,128,128,128,128,128,128390 ENDPROC400410 DEF PROCAxis420 YScale=6430 CLG440 VDU29,0;0;450 MOVE50,0:DRAW50,860460 MOVE0,50:DRAW1279,50470 VDU5480 FOR Mark%=0 TO 780 STEP YScale*10
490 MOVE20,Mark%+YScale*10:PRINT"-" 
500 NEXT Mark%510 FOR Mark%=50 TO 1250 STEP 100520 MOVEMark%,50:PRINTCHR$224530 NEXT Mark%540 VDU 4550 REM Set Graphics Origin560 VDU29,50;50;570 ENDPROC580590 DEF PROCEnv600 PROCReset610 IF Input$="1" t=1620 IF Input$="2" aa=1630 IF Input$="3" ad=1640 IF Input$="4" as=1650 IF Input$="5" ar=1660 IF Input$="6" ala=1670 IF Input$="7" ald=1680 IF Input$="8" dur=1690 PROCPrintEnv700 PROCAlter710 PROCPrintEnv
720 ENDPROC730740 DEF PROCReset750 b=3:t=3:aa=3:ad=3:as=3:ar=3760 ala=3:ald=3:dur=3
762 pi1=3:pi2=3:pi3=3764 pn1=3:pn2=3:pn3=3:p=3770 ENDPROC780790 DEF PROCPrintEnv800 COLOURb:PRINTTAB(0,0)"ENV1,";:COLOURt:PRINT;T;810 COLOURb:P.;",";:COLOURpi1:P.;PI1;:COLOURb:P.;",";:COLOURpi2:P.;PI2;:COLOURb:P.;",";:COLOURpi3:P.;PI3;:COLOURb:P.;",";:COLOURpn1:P.;PN1;:COLOURb:P.;",";:COLOURpn2:P.;PN2;:COLOURb:P.;",";:COLOURpn3:P.;PN3;:COLOURb:P.;",";
820 COLOURaa:PRINT;AA;:COLOURb:PRINT;",";:COLOURad:PRINT;AD;:COLOURb:PRINT;",";830 COLOURas:PRINT;AS;:COLOURb:PRINT;",";:COLOURar:PRINT;AR;:COLOURb:PRINT","; 
840 COLOURala:PRINT;ALA;:COLOURb:PRINT;",";:COLOURald:PRINT;ALD:COLOURb850 COLOURdur:PRINTTAB(14,1)SPC(4)TAB(10,1)"Dur=";Duration:COLOURb
855 COLOURp:PRINTTAB(23,1)SPC(6)TAB(18 ,1)"Pitch=";Pit1:COLOURb
860 ENDPROC870880 DEF PROCAlter890 INPUT NewVal$:PRINTTAB(0,2)SPC(6)900 IF NewVal$="" PROCReset:PROCPrintEnv:ENDPROC910 NewVal=EVAL(NewVal$)920 PRINTTAB(30,0)SPC(20)930 ON EVAL(Input$) GOTO940,950,960,970,980,990,1000,1010940 T=NewVal:T1=T:ENDPROC
950 AA=NewVal:ENDPROC960 AD=NewVal:ENDPROC970 AS=NewVal:ENDPROC980 AR=NewVal:ENDPROC990 ALA=NewVal:ENDPROC1000 ALD=NewVal:ENDPROC1010 Duration=NewVal:ENDPROC
10201030 DEF PROCSound
1040 ENVELOPE1,T,PI1,PI2,PI3,PN1,PN2,PN3,AA,AD,AS,AR,ALA,ALD1050 SOUND1,1,Pit1,Duration1060 REM Clear Last Timing Results1070 PRINTTAB(0,4)SPC(39);:PRINTTAB(0,4);1080 IF T=0 T1=11090 IF T=128MT1=1291100 Time=0:Amp=01110 MOVE0,01120 YScale=61130 PROCAttack1140 PROCPrint("A",8,32)1150 IF OverTime GOTO 12101160 PROCDecay1170 PROCPrint("D",8,32)1180 IF OverTime GOTO 12101190 PROCSustain1200 PROCPrint("S",8,32)1210 PROCPrint("r",40,16)1220 PROCRelease1230 PROCPrint("R",0,0)1240 PRINT;"Secs";
1242 FinalTime=Time
1244 PROCPitEnv1250 ENDPROC12601270 DEF PROCAttack1280 REPEAT1290 Amp=Amp+AA1300 IF Amp>ALA Amp=ALA1310 DRAW Time,Amp*YScale1320 Time=Time+T1 MOD1281330 PROCTimeCheck:IF OverTime GOTO1350
1340 DRAW Time,Amp*YScale1350 UNTIL OverTime OR Amp=ALA1360 ENDPROC13701380 DEF PROCDecay1390 REPEAT1400 Amp=Amp+AD1410 IF ALD<ALA:IF Amp<ALD Amp=ALD1420 IF ALD>ALA:IF Amp>ALD Amp=ALD
1430 IF ALD=ALA Amp=ALD1440 DRAW Time,Amp*YScale1450 Time=Time+T1 MOD1281460 PROCTimeCheck:IF OverTime GOTO1480
1470 DRAW Time,Amp*YScale1480 UNTIL OverTime OR Amp=ALD
1490 ENDPROC15001510 DEF PROCSustain1520 REPEAT1530 Amp=Amp+AS1540 IF Amp<0 Amp=01550 DRAW Time,Amp*YScale1560 Time=Time+T1 MOD1281570 PROCTimeCheck:IF OverTime GOTO1590
1580 DRAW Time,Amp*YScale1590 UNTIL OverTime OR Amp=01600 ENDPROC16101620 DEF PROCRelease1630 REPEAT1640 Amp=Amp+AR1650 IF Amp<0 Amp=01660 DRAW Time,Amp*YScale1670 IF Amp=0 GOTO17001680 Time=Time+T1 MOD1281690 DRAW Time,Amp*YScale1700 UNTIL Amp=01710 ENDPROC17201730 DEF PROCTimeCheck1740 OverTime=FALSE1750 IF Time>Duration*5 Time=Duration*5:OverTime=TRUE1760 ENDPROC17701780 DEF PROCPrint(Phase$,Oset1,Oset2) 
1790 IF Phase$="R" GOTO18601800 VDU51810 MOVE Time+Oset1,Amp*YScale+Oset2 
1820 PRINTPhase$
1830 MOVE Time,Amp*YScale1840 VDU41850 IF Phase$="r" ENDPROC1860 PRINTPhase$;"=";Time/100;" ";
1870 ENDPROC
2000 DEF PROCAxis2
2010 YScale=32020 VDU29,0;0;2030 VDU52040 FOR Mark%=60 TO 780 STEP YScale*10
2050 MOVE40,Mark%+YScale*10:PRINT"-"
2060 NEXT Mark%2070 VDU42080 VDU29,50;50;2090 ENDPROC21002110 DEF PROCP(pi,pn)2120 FOR P%=1 TO pn2130 Pitch=Pitch+pi2140 IF Pitch>255 Pitch=Pitch MOD256
2150 IF Pitch<0 Pitch=Pitch+2562160 DRAW Time,Pitch*YScale2170 Time=Time+T1 MOD1282180 PROCFinalTimeCheck:IF FTime P%=pn
2190 DRAW Time,Pitch*YScale2200 NEXT P%2210 ENDPROC22202230 DEF PROCPitEnv2240 PROCReset2250 IF Input=33 pi1=12260 IF Input=34 pi2=12270 IF Input=35 pi3=12280 IF Input=36 pn1=12290 IF Input=37 pn2=1
2300 IF Input=38 pn3=1
2310 IF Input=39 pn3=1
2320 PROCPrintEnv2330 PROCAlterPit2340 PROCPrintEnv
2350 ENDPROC

#### Combining with Fx keys

9 REM PROGRAM 5.2 (Combined)10 REM PROGRAM 5.119 REM ADSR & PITCH Graph Generator20 REM ADSR Graph Generator24 REM Added Line Numbers are not25 REM Multiples of 10 and are+26 REM 75,145,762,764,855,1242,124427 REM Plus 2000 to 267029 REM Altered Lines=150,810 3530
3540 *TV255,150 MODE160 PROCSetUp70 PROCAxis
75 PROCAxis280 Input$="":PROCReset:PROCPrintEnv
90100 REPEAT110 *FX15,1120 Input$=GET$130 IF Input$=" " PROCSound140 IF Input$>="1" AND Input$<="8" PROCEnv
145 IF Input$>="!" AND Input$<="'" Input=ASC(Input$):PROCPitEnv150 IF Input$="C" PROCAxis160 UNTIL Input$="Q"170 END180190 DEF PROCSetUp200 REM Set Text Window210 VDU28,0,4,39,0220 REM Set Graphics Window230 VDU24,0;0;1279;860;240 REM Background=Yellow250 GCOL0,130:CLG260 REM Foreground=Black270 GCOL0,0280 REM Set COLOUR 1 to Flashing 
290 VDU19,1,9,0,0,0300310 REM Set Initial Parameters
320 PI1=0:PI2=0:PI3=0330 PN1=0:PN2=0:PN3=0340 T=20:T1=T:Pitch=10:Pit1=Pitch350 AA=126:AD=-4:AS=-1:AR=-6360 ALA=126:ALD=80:Duration=80370 REM Marker for X Axis380 VDU23,224,128,128,128,128,128,128,128,128390 ENDPROC400410 DEF PROCAxis420 YScale=6430 CLG440 VDU29,0;0;450 MOVE50,0:DRAW50,860460 MOVE0,50:DRAW1279,50470 VDU5480 FOR Mark%=0 TO 780 STEP YScale*10
490 MOVE20,Mark%+YScale*10:PRINT"-" 
500 NEXT Mark%510 FOR Mark%=50 TO 1250 STEP 100520 MOVEMark%,50:PRINTCHR$224530 NEXT Mark%540 VDU 4550 REM Set Graphics Origin560 VDU29,50;50;570 ENDPROC580590 DEF PROCEnv600 PROCReset610 IF Input$="1" t=1620 IF Input$="2" aa=1630 IF Input$="3" ad=1640 IF Input$="4" as=1650 IF Input$="5" ar=1660 IF Input$="6" ala=1670 IF Input$="7" ald=1680 IF Input$="8" dur=1690 PROCPrintEnv700 PROCAlter710 PROCPrintEnv
720 ENDPROC730740 DEF PROCReset750 b=3:t=3:aa=3:ad=3:as=3:ar=3760 ala=3:ald=3:dur=3
762 pi1=3:pi2=3:pi3=3764 pn1=3:pn2=3:pn3=3:p=3770 ENDPROC780790 DEF PROCPrintEnv800 COLOURb:PRINTTAB(0,0)"ENV1,";:COLOURt:PRINT;T;810 COLOURb:P.;",";:COLOURpi1:P.;PI1;:COLOURb:P.;",";:COLOURpi2:P.;PI2;:COLOURb:P.;",";:COLOURpi3:P.;PI3;:COLOURb:P.;",";:COLOURpn1:P.;PN1;:COLOURb:P.;",";:COLOURpn2:P.;PN2;:COLOURb:P.;",";:COLOURpn3:P.;PN3;:COLOURb:P.;",";
820 COLOURaa:PRINT;AA;:COLOURb:PRINT;",";:COLOURad:PRINT;AD;:COLOURb:PRINT;",";830 COLOURas:PRINT;AS;:COLOURb:PRINT;",";:COLOURar:PRINT;AR;:COLOURb:PRINT","; 
840 COLOURala:PRINT;ALA;:COLOURb:PRINT;",";:COLOURald:PRINT;ALD:COLOURb850 COLOURdur:PRINTTAB(14,1)SPC(4)TAB(10,1)"Dur=";Duration:COLOURb
855 COLOURp:PRINTTAB(23,1)SPC(6)TAB(18 ,1)"Pitch=";Pit1:COLOURb
860 ENDPROC870880 DEF PROCAlter890 INPUT NewVal$:PRINTTAB(0,2)SPC(6)900 IF NewVal$="" PROCReset:PROCPrintEnv:ENDPROC910 NewVal=EVAL(NewVal$)920 PRINTTAB(30,0)SPC(20)930 ON EVAL(Input$) GOTO940,950,960,970,980,990,1000,1010940 T=NewVal:T1=T:ENDPROC
950 AA=NewVal:ENDPROC960 AD=NewVal:ENDPROC970 AS=NewVal:ENDPROC980 AR=NewVal:ENDPROC990 ALA=NewVal:ENDPROC1000 ALD=NewVal:ENDPROC1010 Duration=NewVal:ENDPROC
10201030 DEF PROCSound
1040 ENVELOPE1,T,PI1,PI2,PI3,PN1,PN2,PN3,AA,AD,AS,AR,ALA,ALD1050 SOUND1,1,Pit1,Duration1060 REM Clear Last Timing Results1070 PRINTTAB(0,4)SPC(39);:PRINTTAB(0,4);1080 IF T=0 T1=11090 IF T=128MT1=1291100 Time=0:Amp=01110 MOVE0,01120 YScale=61130 PROCAttack1140 PROCPrint("A",8,32)1150 IF OverTime GOTO 12101160 PROCDecay1170 PROCPrint("D",8,32)1180 IF OverTime GOTO 12101190 PROCSustain1200 PROCPrint("S",8,32)1210 PROCPrint("r",40,16)1220 PROCRelease1230 PROCPrint("R",0,0)1240 PRINT;"Secs";
1242 FinalTime=Time
1244 PROCPitchEnv1250 ENDPROC12601270 DEF PROCAttack1280 REPEAT1290 Amp=Amp+AA1300 IF Amp>ALA Amp=ALA1310 DRAW Time,Amp*YScale1320 Time=Time+T1 MOD1281330 PROCTimeCheck:IF OverTime GOTO1350
1340 DRAW Time,Amp*YScale1350 UNTIL OverTime OR Amp=ALA1360 ENDPROC13701380 DEF PROCDecay1390 REPEAT1400 Amp=Amp+AD1410 IF ALD<ALA:IF Amp<ALD Amp=ALD1420 IF ALD>ALA:IF Amp>ALD Amp=ALD
1430 IF ALD=ALA Amp=ALD1440 DRAW Time,Amp*YScale1450 Time=Time+T1 MOD1281460 PROCTimeCheck:IF OverTime GOTO1480
1470 DRAW Time,Amp*YScale1480 UNTIL OverTime OR Amp=ALD
1490 ENDPROC15001510 DEF PROCSustain1520 REPEAT1530 Amp=Amp+AS1540 IF Amp<0 Amp=01550 DRAW Time,Amp*YScale1560 Time=Time+T1 MOD1281570 PROCTimeCheck:IF OverTime GOTO1590
1580 DRAW Time,Amp*YScale1590 UNTIL OverTime OR Amp=01600 ENDPROC16101620 DEF PROCRelease1630 REPEAT1640 Amp=Amp+AR1650 IF Amp<0 Amp=01660 DRAW Time,Amp*YScale1670 IF Amp=0 GOTO17001680 Time=Time+T1 MOD1281690 DRAW Time,Amp*YScale1700 UNTIL Amp=01710 ENDPROC17201730 DEF PROCTimeCheck1740 OverTime=FALSE1750 IF Time>Duration*5 Time=Duration*5:OverTime=TRUE1760 ENDPROC17701780 DEF PROCPrint(Phase$,Oset1,Oset2) 
1790 IF Phase$="R" GOTO18601800 VDU51810 MOVE Time+Oset1,Amp*YScale+Oset2 
1820 PRINTPhase$
1830 MOVE Time,Amp*YScale1840 VDU41850 IF Phase$="r" ENDPROC1860 PRINTPhase$;"=";Time/100;" ";
1870 ENDPROC
1880
2000 DEF PROCAxis2
2010 YScale=32020 VDU29,0;0;2030 VDU52040 FOR Mark%=60 TO 780 STEP YScale*10
2050 MOVE40,Mark%+YScale*10:PRINT"-"
2060 NEXT Mark%2070 VDU42080 VDU29,50;50;2090 ENDPROC21002110 DEF PROCP(pi,pn)2120 FOR P%=1 TO pn2130 Pitch=Pitch+pi2140 IF Pitch>255 Pitch=Pitch MOD256
2150 IF Pitch<0 Pitch=Pitch+2562160 DRAW Time,Pitch*YScale2170 Time=Time+T1 MOD1282180 PROCFinalTimeCheck:IF FTime P%=pn
2190 DRAW Time,Pitch*YScale2200 NEXT P%2210 ENDPROC22202230 DEF PROCPitEnv2240 PROCReset2250 IF Input=33 pi1=12260 IF Input=34 pi2=12270 IF Input=35 pi3=12280 IF Input=36 pn1=12290 IF Input=37 pn2=1
2300 IF Input=38 pn3=1
2310 IF Input=39 pn3=1
2320 PROCPrintEnv2330 PROCAlterPit2340 PROCPrintEnv
2350 ENDPROC

#### Estimate DEF PROCAlterPit and DEF PROCFinalTimeCheck

4870 
4880 DEF PROCAlterPit4890 INPUT NewVal$:PRINTTAB(0,2)SPC(6)4900 IF NewVal$="" PROCReset:PROCPrintEnv:ENDPROC4910 NewVal=EVAL(NewVal$)4920 PRINTTAB(30,0)SPC(20)4930 ON EVAL(Input$) GOTO940,950,960,970,980,990,1000,10104940 T=NewVal:T1=T:ENDPROC
4950 AA=NewVal:ENDPROC4960 AD=NewVal:ENDPROC4970 AS=NewVal:ENDPROC4980 AR=NewVal:ENDPROC4990 ALA=NewVal:ENDPROC5000 ALD=NewVal:ENDPROC5010 Duration=NewVal:ENDPROC
5020


#### Clues

- Note the change of YScale in line 2010 and 2520 during the drawing of the pitch graph
- PROCPitEnv serves the same purpose as PROCEnv, and PROCAlterPit is similar to PROCAlter.
- Like T, Pitch has an assistant in Pit1, so whatever value the pitch actually reaches during the envelope execution, the program knows the original pitch value. See lines 2490, 2530, 2580 and the original 340.The drawing is done by PROCP which is the same for all three PI/PN pairs and is called with the three sets of parameters by PROCPitchEnv. In line 2590, if T is greater than 127, ie the envelope is set not to repeat, the pitch envelope is only drawn once.
- The total duration of the sound after the ADSR graph has been drawn is put into FinalTime as the pitch envelope will continue until the release phase completes. PROCFinalTimeCheck performs a similar function to PROCOverTime.

So,
- Lines 2490-2590  are referred to in the text description

#### Add noise channel

1045 SOUND 0,-15,3,254

